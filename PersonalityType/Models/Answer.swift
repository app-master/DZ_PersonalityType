//
//  Answer.swift
//  PersonalityType
//
//  Created by user on 20/03/2019.
//  Copyright ¬© 2019 Sergey Koshlakov. All rights reserved.
//

import Foundation

struct Answer {
    
    let text: String
    let personalType: PersonalType
    
}

enum PersonalType: Character {
    
    case optimist = "üòÄ"
    case pessimist = "üôÅ"
    case realist = "üòê"
    case naughty = "ü§™"
    
    var description: String {
        
        switch self {
        case .optimist:
            return "–í—Å–µ —Ö–æ—Ä–æ—à–æ, –∞ –±—É–¥–µ—Ç –µ—â–µ –ª—É—á—à–µ!"
        case .pessimist:
            return "–£ –≤–∞—Å –¥–æ–≤–æ–ª—å–Ω–æ —Ç—Ä–µ–∑–≤—ã–π –≤–∑–≥–ª—è–¥ –Ω–∞ –º–∏—Ä, –Ω–æ –∏ –ø–µ—Å—Å–∏–º–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –Ω–æ—Ç–æ–∫ –≤—ã –Ω–µ –ª–∏—à–µ–Ω—ã, –∏ –≤—Ä–µ–º—è –æ—Ç –≤—Ä–µ–º–µ–Ω–∏ –æ–Ω–∏ –ø—Ä–æ—è–≤–ª—è—é—Ç—Å—è, –æ–±—ã—á–Ω–æ –≤ –ø–ª–æ—Ö–æ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–∏. –ß–∞—â–µ —Ä–∞–¥—É–π—Ç–µ —Å–µ–±—è, –ø–æ—Ç–æ–º—É —á—Ç–æ –∂–∏–∑–Ω—å - –≤–æ–≤—Å–µ –Ω–µ —Ç–∞–∫–∞—è –ø–ª–æ—Ö–∞—è —à—Ç—É–∫–∞, –∫–∞–∫ –∫–∞–∂–µ—Ç—Å—è –∏ –∫–∞–∫ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –ø–æ —Ç–µ–ª–µ–≤–∏–∑–æ—Ä—É"
        case .realist:
            return "–í—ã –∞–¥–µ–∫–≤–∞—Ç–Ω–æ –∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ –æ–∫—Ä—É–∂–∞—é—â–∏–µ —Å–æ–±—ã—Ç–∏—è –∏ –≤ –ª—é–±–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç–µ –æ–ø—Ç–∏–º–∏–∑–º –∏ –∑–¥—Ä–∞–≤—ã–π —É–º, –Ω–µ –ø–æ–¥–¥–∞–≤–∞—è—Å—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—é. –í—ã –Ω–µ —Å–∫–ª–æ–Ω–Ω—ã —Ñ–∏–ª–æ—Å–æ—Ñ—Å—Ç–≤–æ–≤–∞—Ç—å –∏ –ø—Ä–µ–¥–∞–≤–∞—Ç—å—Å—è —ç–º–æ—Ü–∏—è–º - –≤—ã –¥–µ–π—Å—Ç–≤—É–µ—Ç–µ!"
        case .naughty:
            return "–ë—É–¥—å —á—Ç–æ –±—É–¥–µ—Ç!"
        }
        
    }
    
}
